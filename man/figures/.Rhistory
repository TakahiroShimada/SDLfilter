#### Filter temporal and/or spatial duplicates
turtle.dup <- dupfilter(turtle, step.time=5/60, step.dist=0.001)
#### ddfilter
## Estimate vmax
V <- est.vmax(turtle.dup)
## Estimate maxvlp
VLP <- est.maxvlp(turtle.dup)
## Apply ddfilter
turtle.dd <- ddfilter(turtle.dup, vmax=V, maxvlp=VLP)
# turtle.dd <- ddfilter(turtle.dup, vmax=9.9, qi=4, ia=90, maxvlp=2.0)
dev.off()
plot(Australia, col="grey", las=1, axes=T, xlim=c(147.8, 156.2), ylim=c(-29,-22), main="Entire area")
points(lat~lon, data=turtle.dup, bg="red", pch=21)
points(lat~lon, data=turtle.dep, bg="yellow", pch=21)
legend('topright', legend=c("Retained", "Removed"), pt.bg=c("yellow", "red"), pch=21)
scalebar(d=200, label="200 km")
box()
## Fastloc GPS data obtained from a green turtle
data(turtle)
## Bathymetry model developed by Beaman (2010)
data(bathymodel)
## A tidal plane for the example site
data(tidalplane)
## Tidal observations and predictions for the example site
data(tidedata)
## Maps for the example site
data(SandyStrait)
#### Remove temporal and/or spatial duplicates
turtle.dup <- dupfilter(turtle)
#### Remove biologically unrealistic fixes
## Estimate vmax
V <- est.vmax(turtle.dup)
## Estimate maxvlp
VLP <- est.maxvlp(turtle.dup)
## Apply ddfilter
turtle.dd <- ddfilter(turtle.dup, vmax=V, maxvlp=VLP)
#### Apply depthfilter
turtle.dep <- depthfilter(sdata=turtle.dd,
bathymetry=bathymodel,
tide=tidedata,
tidal.plane=tidalplane)
#### Plot data removed or retained by depthfilter
dev.off()
plot(SandyStrait, col="grey", xlim=c(152.8, 153.1), ylim=(c(-25.75, -25.24)), axes=T, las=1)
points(lat~lon, data=turtle.dup, bg="red", pch=21)
points(lat~lon, data=turtle.dep, bg="yellow", pch=21)
legend('bottomleft', legend=c("Retained", "Removed"), pt.bg=c("yellow", "red"), pch=21)
scalebar(d=10, label="10 km")
box()
remove.packages("SDLfilter")
library(devtools)
require(roxygen2)
setwd("C:/Users/jc207418/Documents/My Files/Uni/JCU/Research/Subjects/SDLfilter/Working folder/SDLfilter")
#create("gpsfilter")
document()
install()
#### Load data sets
## Fastloc GPS data obtained from a green turtle
data(turtle)
## A Map for the example site
data(Australia)
data(SandyStrait)
#### Filter temporal and/or spatial duplicates
turtle.dup <- dupfilter(turtle, step.time=5/60, step.dist=0.001)
#### ddfilter
## Estimate vmax
V <- est.vmax(turtle.dup)
## Estimate maxvlp
VLP <- est.maxvlp(turtle.dup)
## Apply ddfilter
turtle.dd <- ddfilter(turtle.dup, vmax=V, maxvlp=VLP)
# turtle.dd <- ddfilter(turtle.dup, vmax=9.9, qi=4, ia=90, maxvlp=2.0)
#### Plot data removed or retained by ddfilter
## Entire area
dev.off()
plot(Australia, col="grey", las=1, axes=T, xlim=c(147.8, 156.2), ylim=c(-29,-22), main="Entire area")
points(lat~lon, data=turtle.dup, bg="red", pch=21)
points(lat~lon, data=turtle.dd, bg="yellow", pch=21)
legend('topright', legend=c("Retained", "Removed"), pt.bg=c("yellow", "red"), pch=21)
scalebar(d=200, label="200 km")
box()
## Zoomed in
dev.off()
plot(SandyStrait, col="grey", axes=T, las=1, xlim=c(152.8, 153.1), ylim=(c(-25.75, -25.24)), main="Zoomed in")
points(lat~lon, data=turtle.dup, bg="red", pch=21)
points(lat~lon, data=turtle.dd, bg="yellow", pch=21)
legend('topleft', legend=c("Retained", "Removed"), pt.bg=c("yellow", "red"), pch=21)
scalebar(d=10, label="10 km")
box()
dev.off()
plot(Australia, col="grey", las=1, axes=T, xlim=c(147.8, 156.2), ylim=c(-29,-22), main="Entire area")
points(lat~lon, data=turtle.dup, bg="red", pch=21)
points(lat~lon, data=turtle.dd, bg="yellow", pch=21)
legend('topright', legend=c("Retained", "Removed"), pt.bg=c("yellow", "red"), pch=21)
scalebar(d=200, label="200 km")
box()
dev.off()
plot(SandyStrait, col="grey", axes=T, las=1, xlim=c(152.8, 153.1), ylim=(c(-25.75, -25.24)), main="Zoomed in")
points(lat~lon, data=turtle.dup, bg="red", pch=21)
points(lat~lon, data=turtle.dd, bg="yellow", pch=21)
legend('topleft', legend=c("Retained", "Removed"), pt.bg=c("yellow", "red"), pch=21)
scalebar(d=10, label="10 km")
box()
dev.off()
plot(Australia, col="grey", las=1, axes=T, xlim=c(147.8, 156.2), ylim=c(-29,-22), main="Entire area")
points(lat~lon, data=turtle.dup, bg="red", pch=21)
points(lat~lon, data=turtle.dd, bg="yellow", pch=21)
legend('topright', legend=c("Retained", "Removed"), pt.bg=c("yellow", "red"), pch=21)
scalebar(d=200, label="200 km")
box()
dev.off()
plot(SandyStrait, col="grey", axes=T, las=1, xlim=c(152.8, 153.1), ylim=(c(-25.75, -25.24)), main="Zoomed in")
points(lat~lon, data=turtle.dup, bg="red", pch=21)
points(lat~lon, data=turtle.dd, bg="yellow", pch=21)
legend('topleft', legend=c("Retained", "Removed"), pt.bg=c("yellow", "red"), pch=21)
scalebar(d=10, label="10 km")
box()
#### Load data sets
## Fastloc GPS data obtained from a green turtle
data(turtle)
## Bathymetry model developed by Beaman (2010)
data(bathymodel)
## A tidal plane for the example site
data(tidalplane)
## Tidal observations and predictions for the example site
data(tidedata)
## Maps for the example site
data(SandyStrait)
#### Remove temporal and/or spatial duplicates
turtle.dup <- dupfilter(turtle)
#### Remove biologically unrealistic fixes
## Estimate vmax
V <- est.vmax(turtle.dup)
## Estimate maxvlp
VLP <- est.maxvlp(turtle.dup)
## Apply ddfilter
turtle.dd <- ddfilter(turtle.dup, vmax=V, maxvlp=VLP)
#### Apply depthfilter
turtle.dep <- depthfilter(sdata=turtle.dd,
bathymetry=bathymodel,
tide=tidedata,
tidal.plane=tidalplane)
#### Plot data removed or retained by depthfilter
dev.off()
plot(SandyStrait, col="grey", xlim=c(152.8, 153.1), ylim=(c(-25.75, -25.24)), axes=T, las=1)
points(lat~lon, data=turtle.dup, bg="red", pch=21)
points(lat~lon, data=turtle.dep, bg="yellow", pch=21)
legend('topleft', legend=c("Retained", "Removed"), pt.bg=c("yellow", "red"), pch=21)
scalebar(d=10, label="10 km")
box()
data(turtle)
## A Map for the example site
data(Australia)
data(SandyStrait)
#### Filter temporal and/or spatial duplicates
turtle.dup <- dupfilter(turtle, step.time=5/60, step.dist=0.001)
turtle.dd <- ddfilter(turtle.dup, vmax=9.9, qi=4, ia=90, maxvlp=2.0)
dev.off()
plot(SandyStrait, col="grey", axes=T, las=1, xlim=c(152.8, 153.1), ylim=(c(-25.75, -25.24)), main="Zoomed in")
points(lat~lon, data=turtle.dup, bg="red", pch=21)
points(lat~lon, data=turtle.dd, bg="yellow", pch=21)
legend('topleft', legend=c("Retained", "Removed"), pt.bg=c("yellow", "red"), pch=21)
scalebar(d=10, label="10 km")
box()
remove.packages("SDLfilter")
library(devtools)
require(roxygen2)
setwd("C:/Users/jc207418/Documents/My Files/Uni/JCU/Research/Subjects/SDLfilter/Working folder/SDLfilter")
#create("gpsfilter")
document()
install()
data(turtle)
## A Map for the example site
data(Australia)
data(SandyStrait)
#### Filter temporal and/or spatial duplicates
turtle.dup <- dupfilter(turtle, step.time=5/60, step.dist=0.001)
#### ddfilter
## Using the built-in function to estimate threshold speeds
V <- est.vmax(turtle.dup)
VLP <- est.maxvlp(turtle.dup)
turtle.dd <- ddfilter(turtle.dup, vmax=V, maxvlp=VLP)
## Or using user specified threshold speeds
turtle.dd <- ddfilter(turtle.dup, vmax=9.9, qi=4, ia=90, maxvlp=2.0)
dev.off()
plot(Australia, col="grey", las=1, axes=T, xlim=c(147.8, 156.2), ylim=c(-29,-22), main="Entire area")
points(lat~lon, data=turtle.dup, bg="red", pch=21)
points(lat~lon, data=turtle.dd, bg="yellow", pch=21)
legend('topright', legend=c("Retained", "Removed"), pt.bg=c("yellow", "red"), pch=21)
scalebar(d=200, label="200 km")
box()
dev.off()
plot(SandyStrait, col="grey", axes=T, las=1, xlim=c(152.8, 153.1), ylim=(c(-25.75, -25.24)), main="Zoomed in")
points(lat~lon, data=turtle.dup, bg="red", pch=21)
points(lat~lon, data=turtle.dd, bg="yellow", pch=21)
legend('topleft', legend=c("Retained", "Removed"), pt.bg=c("yellow", "red"), pch=21)
scalebar(d=10, label="10 km")
box()
## Fastloc GPS data obtained from a green turtle
data(turtle)
## Bathymetry model developed by Beaman (2010)
data(bathymodel)
## A tidal plane for the example site
data(tidalplane)
## Tidal observations and predictions for the example site
data(tidedata)
## Maps for the example site
data(SandyStrait)
#### Remove temporal and/or spatial duplicates
turtle.dup <- dupfilter(turtle)
#### Remove biologically unrealistic fixes
turtle.dd <- ddfilter(turtle.dup, vmax=9.9, qi=4, ia=90, maxvlp=2.0)
turtle.dep <- depthfilter(sdata=turtle.dd,
bathymetry=bathymodel,
tide=tidedata,
tidal.plane=tidalplane)
dev.off()
plot(SandyStrait, col="grey", xlim=c(152.8, 153.1), ylim=(c(-25.75, -25.24)), axes=T, las=1)
points(lat~lon, data=turtle.dup, bg="red", pch=21)
points(lat~lon, data=turtle.dep, bg="yellow", pch=21)
legend('topleft', legend=c("Retained", "Removed"), pt.bg=c("yellow", "red"), pch=21)
scalebar(d=10, label="10 km")
box()
require(SDLfilter)
#### Load data sets
## Fastloc GPS data obtained from a green turtle
data(turtle)
## Bathymetry model developed by Beaman (2010)
data(bathymodel)
## A tidal plane for the example site
data(tidalplane)
## Tidal observations and predictions for the example site
data(tidedata)
## Maps for the example site
data(SandyStrait)
#### Remove temporal and/or spatial duplicates
turtle.dup <- dupfilter(turtle)
#### Remove biologically unrealistic fixes
turtle.dd <- ddfilter(turtle.dup, vmax=9.9, qi=4, ia=90, maxvlp=2.0)
#### Apply depthfilter
turtle.dep <- depthfilter(sdata=turtle.dd,
bathymetry=bathymodel,
tide=tidedata,
tidal.plane=tidalplane)
dev.off()
dev.off()
setwd("C:/Users/jc207418/Documents/My Files/Uni/JCU/Research/Subjects/SDLfilter/Working folder/SDLfilter/man/figures")
png("README-example.png", width=700, height=700, units="px", pointsize=17)
par(mfrow=c(1,2), mar=c(2,3.5,2,1))
#### Plot data removed or retained by ddfilter
## Entire area
dev.off()
plot(Australia, col="grey", las=1, axes=T, xlim=c(147.8, 156.2), ylim=c(-29,-22), main="Entire area")
points(lat~lon, data=turtle.dup, bg="red", pch=21)
points(lat~lon, data=turtle.dd, bg="yellow", pch=21)
legend('topright', legend=c("Retained", "Removed"), pt.bg=c("yellow", "red"), pch=21)
scalebar(d=200, label="200 km")
box()
## Zoomed in
dev.off()
plot(SandyStrait, col="grey", axes=T, las=1, xlim=c(152.8, 153.1), ylim=(c(-25.75, -25.24)), main="Zoomed in")
points(lat~lon, data=turtle.dup, bg="red", pch=21)
points(lat~lon, data=turtle.dd, bg="yellow", pch=21)
legend('topleft', legend=c("Retained", "Removed"), pt.bg=c("yellow", "red"), pch=21)
scalebar(d=10, label="10 km")
box()
dev.off()
dev.off()
setwd("C:/Users/jc207418/Documents/My Files/Uni/JCU/Research/Subjects/SDLfilter/Working folder/SDLfilter/man/figures")
png("README-example.png", width=700, height=700, units="px", pointsize=17)
par(mfrow=c(1,2), mar=c(2,3.5,2,1))
#### Plot data removed or retained by ddfilter
## Entire area
plot(Australia, col="grey", las=1, axes=T, xlim=c(147.8, 156.2), ylim=c(-29,-22), main="Entire area")
points(lat~lon, data=turtle.dup, bg="red", pch=21)
points(lat~lon, data=turtle.dd, bg="yellow", pch=21)
legend('topright', legend=c("Retained", "Removed"), pt.bg=c("yellow", "red"), pch=21)
scalebar(d=200, label="200 km")
box()
## Zoomed in
dev.off()
plot(SandyStrait, col="grey", axes=T, las=1, xlim=c(152.8, 153.1), ylim=(c(-25.75, -25.24)), main="Zoomed in")
points(lat~lon, data=turtle.dup, bg="red", pch=21)
points(lat~lon, data=turtle.dd, bg="yellow", pch=21)
legend('topleft', legend=c("Retained", "Removed"), pt.bg=c("yellow", "red"), pch=21)
scalebar(d=10, label="10 km")
box()
dev.off()
dev.off()
setwd("C:/Users/jc207418/Documents/My Files/Uni/JCU/Research/Subjects/SDLfilter/Working folder/SDLfilter/man/figures")
png("README-example.png", width=800, height=400, units="px", pointsize=17)
par(mfrow=c(1,2), mar=c(2,3.5,2,1))
#### Plot data removed or retained by ddfilter
## Entire area
plot(Australia, col="grey", las=1, axes=T, xlim=c(147.8, 156.2), ylim=c(-29,-22), main="Entire area")
points(lat~lon, data=turtle.dup, bg="red", pch=21)
points(lat~lon, data=turtle.dd, bg="yellow", pch=21)
legend('topright', legend=c("Retained", "Removed"), pt.bg=c("yellow", "red"), pch=21)
scalebar(d=200, label="200 km")
box()
## Zoomed in
plot(SandyStrait, col="grey", axes=T, las=1, xlim=c(152.8, 153.1), ylim=(c(-25.75, -25.24)), main="Zoomed in")
points(lat~lon, data=turtle.dup, bg="red", pch=21)
points(lat~lon, data=turtle.dd, bg="yellow", pch=21)
legend('topleft', legend=c("Retained", "Removed"), pt.bg=c("yellow", "red"), pch=21)
scalebar(d=10, label="10 km")
box()
dev.off()
dev.off()
setwd("C:/Users/jc207418/Documents/My Files/Uni/JCU/Research/Subjects/SDLfilter/Working folder/SDLfilter/man/figures")
png("README-example.png", width=800, height=400, units="px", pointsize=17)
par(mfrow=c(1,2), mar=c(2,3.5,2,1))
#### Plot data removed or retained by ddfilter
## Entire area
plot(Australia, col="grey", xlim=c(147.8, 156.2), ylim=c(-29,-22), main="Entire area")
points(lat~lon, data=turtle.dup, bg="red", pch=21)
points(lat~lon, data=turtle.dd, bg="yellow", pch=21)
axis(1, at=seq(from=148, to=156, by=4))
axis(2, at=seq(from=-32, to=-20, by=2), las=2)
legend('topright', legend=c("Retained", "Removed"), pt.bg=c("yellow", "red"), pch=21)
scalebar(d=200, label="200 km")
box()
## Zoomed in
plot(SandyStrait, col="grey", xlim=c(152.8, 153.1), ylim=(c(-25.75, -25.24)), main="Zoomed in")
points(lat~lon, data=turtle.dup, bg="red", pch=21)
points(lat~lon, data=turtle.dd, bg="yellow", pch=21)
#legend('topleft', legend=c("Retained", "Removed"), pt.bg=c("yellow", "red"), pch=21)
axis(1, at=seq(from=152, to=154, by=0.2))
axis(2, at=seq(from=-26, to=-25, by=0.2), las=2)
scalebar(d=10, label="10 km")
box()
dev.off()
dev.off()
setwd("C:/Users/jc207418/Documents/My Files/Uni/JCU/Research/Subjects/SDLfilter/Working folder/SDLfilter/man/figures")
png("README-example.png", width=800, height=400, units="px", pointsize=17)
par(mfrow=c(1,2), mar=c(2,3,2,1))
#### Plot data removed or retained by ddfilter
## Entire area
plot(Australia, col="grey", xlim=c(147.8, 156.2), ylim=c(-29,-22), main="Entire area")
points(lat~lon, data=turtle.dup, bg="red", pch=21)
points(lat~lon, data=turtle.dd, bg="yellow", pch=21)
axis(1, at=seq(from=148, to=156, by=4))
axis(2, at=seq(from=-32, to=-20, by=2), las=2)
legend('topright', legend=c("Retained", "Removed"), pt.bg=c("yellow", "red"), pch=21)
scalebar(d=200, label="200 km")
box()
## Zoomed in
plot(SandyStrait, col="grey", xlim=c(152.8, 153.1), ylim=(c(-25.75, -25.24)), main="Zoomed in")
points(lat~lon, data=turtle.dup, bg="red", pch=21)
points(lat~lon, data=turtle.dd, bg="yellow", pch=21)
#legend('topleft', legend=c("Retained", "Removed"), pt.bg=c("yellow", "red"), pch=21)
axis(1, at=seq(from=152, to=154, by=0.2))
axis(2, at=seq(from=-26, to=-25, by=0.2), las=2)
scalebar(d=10, label="10 km")
box()
dev.off()
?rect
dev.off()
setwd("C:/Users/jc207418/Documents/My Files/Uni/JCU/Research/Subjects/SDLfilter/Working folder/SDLfilter/man/figures")
png("README-example.png", width=800, height=400, units="px", pointsize=17)
par(mfrow=c(1,2), mar=c(2,3,2,1))
#### Plot data removed or retained by ddfilter
## Entire area
plot(Australia, col="grey", xlim=c(147.8, 156.2), ylim=c(-29,-22), main="Entire area")
points(lat~lon, data=turtle.dup, bg="red", pch=21)
points(lat~lon, data=turtle.dd, bg="yellow", pch=21)
axis(1, at=seq(from=148, to=156, by=4))
axis(2, at=seq(from=-32, to=-20, by=2), las=2)
legend('topright', legend=c("Retained", "Removed"), pt.bg=c("yellow", "red"), pch=21)
rect(152.7, -25.9, 153.2, -25.2, lwd=3)
scalebar(d=200, label="200 km")
box()
## Zoomed in
plot(SandyStrait, col="grey", xlim=c(152.8, 153.1), ylim=(c(-25.75, -25.24)), main="Zoomed in")
points(lat~lon, data=turtle.dup, bg="red", pch=21)
points(lat~lon, data=turtle.dd, bg="yellow", pch=21)
#legend('topleft', legend=c("Retained", "Removed"), pt.bg=c("yellow", "red"), pch=21)
axis(1, at=seq(from=152, to=154, by=0.2))
axis(2, at=seq(from=-26, to=-25, by=0.2), las=2)
scalebar(d=10, label="10 km")
box()
dev.off()
dev.off()
setwd("C:/Users/jc207418/Documents/My Files/Uni/JCU/Research/Subjects/SDLfilter/Working folder/SDLfilter/man/figures")
png("README-example.png", width=800, height=400, units="px", pointsize=17)
par(mfrow=c(1,2), mar=c(2,3,2,1))
#### Plot data removed or retained by ddfilter
## Entire area
plot(Australia, col="grey", xlim=c(147.8, 156.2), ylim=c(-29,-22), main="Entire area")
points(lat~lon, data=turtle.dup, bg="red", pch=21)
points(lat~lon, data=turtle.dd, bg="yellow", pch=21)
axis(1, at=seq(from=148, to=156, by=4))
axis(2, at=seq(from=-32, to=-20, by=2), las=2)
legend('topright', legend=c("Retained", "Removed"), pt.bg=c("yellow", "red"), pch=21)
rect(152.7, -25.9, 153.2, -25.1, lwd=3)
scalebar(d=200, label="200 km")
box()
## Zoomed in
plot(SandyStrait, col="grey", xlim=c(152.8, 153.1), ylim=(c(-25.75, -25.24)), main="Zoomed in")
points(lat~lon, data=turtle.dup, bg="red", pch=21)
points(lat~lon, data=turtle.dd, bg="yellow", pch=21)
#legend('topleft', legend=c("Retained", "Removed"), pt.bg=c("yellow", "red"), pch=21)
axis(1, at=seq(from=152, to=154, by=0.2))
axis(2, at=seq(from=-26, to=-25, by=0.2), las=2)
scalebar(d=10, label="10 km")
box()
dev.off()
library(devtools)
require(roxygen2)
setwd("C:/Users/jc207418/Documents/My Files/Uni/JCU/Research/Subjects/SDLfilter/Working folder/SDLfilter")
#create("gpsfilter")
document()
dev.off()
setwd("C:/Users/jc207418/Documents/My Files/Uni/JCU/Research/Subjects/SDLfilter/Working folder/SDLfilter/man/figures")
png("README-example.png", width=800, height=400, units="px", pointsize=17)
par(mfrow=c(1,2), mar=c(2,3,2,1))
#### Plot data removed or retained by ddfilter
## Entire area
plot(Australia, col="grey", xlim=c(147.8, 156.2), ylim=c(-29,-22), main="Entire area")
points(lat~lon, data=turtle.dup, bg="red", pch=21)
points(lat~lon, data=turtle.dep, bg="yellow", pch=21)
axis(1, at=seq(from=148, to=156, by=4))
axis(2, at=seq(from=-32, to=-20, by=2), las=2)
legend('topright', legend=c("Retained", "Removed"), pt.bg=c("yellow", "red"), pch=21)
rect(152.7, -25.9, 153.2, -25.1, lwd=3)
scalebar(d=200, label="200 km")
box()
## Zoomed in
plot(SandyStrait, col="grey", xlim=c(152.8, 153.1), ylim=(c(-25.75, -25.24)), main="Zoomed in")
points(lat~lon, data=turtle.dup, bg="red", pch=21)
points(lat~lon, data=turtle.dep, bg="yellow", pch=21)
#legend('topleft', legend=c("Retained", "Removed"), pt.bg=c("yellow", "red"), pch=21)
axis(1, at=seq(from=152, to=154, by=0.2))
axis(2, at=seq(from=-26, to=-25, by=0.2), las=2)
scalebar(d=10, label="10 km")
box()
dev.off()
dev.off()
setwd("C:/Users/jc207418/Documents/My Files/Uni/JCU/Research/Subjects/SDLfilter/Working folder/SDLfilter/man/figures")
png("README-example.png", width=800, height=400, units="px", pointsize=17)
par(mfrow=c(1,2), mar=c(2,3,2,1))
#### Plot data removed or retained by ddfilter
## Entire area
plot(Australia, col="grey", xlim=c(147.8, 156.2), ylim=c(-29,-22), main="Entire area")
points(lat~lon, data=turtle.dup, bg="red", pch=21)
points(lat~lon, data=turtle.dep, bg="yellow", pch=21)
axis(1, at=seq(from=148, to=156, by=2))
axis(2, at=seq(from=-32, to=-20, by=2), las=2)
legend('topright', legend=c("Retained", "Removed"), pt.bg=c("yellow", "red"), pch=21)
rect(152.7, -25.9, 153.2, -25.1, lwd=3)
scalebar(d=200, label="200 km")
box()
## Zoomed in
plot(SandyStrait, col="grey", xlim=c(152.8, 153.1), ylim=(c(-25.75, -25.24)), main="Zoomed in")
points(lat~lon, data=turtle.dup, bg="red", pch=21)
points(lat~lon, data=turtle.dep, bg="yellow", pch=21)
#legend('topleft', legend=c("Retained", "Removed"), pt.bg=c("yellow", "red"), pch=21)
axis(1, at=seq(from=152, to=154, by=0.2))
axis(2, at=seq(from=-26, to=-25, by=0.1), las=2)
scalebar(d=10, label="10 km")
box()
dev.off()
dev.off()
setwd("C:/Users/jc207418/Documents/My Files/Uni/JCU/Research/Subjects/SDLfilter/Working folder/SDLfilter/man/figures")
png("README-example.png", width=800, height=400, units="px", pointsize=17)
par(mfrow=c(1,2), mar=c(2,3,2,1))
#### Plot data removed or retained by ddfilter
## Entire area
plot(Australia, col="grey", xlim=c(147.8, 156.2), ylim=c(-29,-22), main="Entire area")
points(lat~lon, data=turtle.dup, bg="red", pch=21)
points(lat~lon, data=turtle.dep, bg="yellow", pch=21)
axis(1, at=seq(from=148, to=156, by=2))
axis(2, at=seq(from=-32, to=-20, by=2), las=2)
legend('topright', legend=c("Retained", "Removed"), pt.bg=c("yellow", "red"), pch=21)
rect(152.7, -25.9, 153.2, -25.1, lwd=3)
scalebar(d=200, label="200 km")
box()
## Zoomed in
plot(SandyStrait, col="grey", xlim=c(152.8, 153.1), ylim=(c(-25.75, -25.24)), main="Zoomed in")
points(lat~lon, data=turtle.dup, bg="red", pch=21)
points(lat~lon, data=turtle.dep, bg="yellow", pch=21)
#legend('topleft', legend=c("Retained", "Removed"), pt.bg=c("yellow", "red"), pch=21)
axis(1, at=seq(from=152, to=154, by=0.1))
axis(2, at=seq(from=-26, to=-25, by=0.1), las=2)
scalebar(d=10, label="10 km")
box()
dev.off()
dev.off()
setwd("C:/Users/jc207418/Documents/My Files/Uni/JCU/Research/Subjects/SDLfilter/Working folder/SDLfilter/man/figures")
png("README-example.png", width=800, height=400, units="px", pointsize=17)
par(mfrow=c(1,2), mar=c(2,3,2,1))
#### Plot data removed or retained by ddfilter
## Entire area
plot(Australia, col="grey", xlim=c(147.8, 156.2), ylim=c(-29,-22), main="Entire area")
points(lat~lon, data=turtle.dup, bg="red", pch=21)
points(lat~lon, data=turtle.dep, bg="yellow", pch=21)
axis(1, at=seq(from=148, to=156, by=2))
axis(2, at=seq(from=-32, to=-20, by=2), las=2)
legend('topright', legend=c("Retained", "Removed"), pt.bg=c("yellow", "red"), pch=21)
rect(152.7, -25.9, 153.2, -25.1, lwd=3)
scalebar(d=200, label="200 km")
box()
## Zoomed in
plot(SandyStrait, col="grey", xlim=c(152.8, 153.1), ylim=(c(-25.75, -25.24)), main="Zoomed in")
points(lat~lon, data=turtle.dup, bg="red", pch=21)
points(lat~lon, data=turtle.dep, bg="yellow", pch=21)
#legend('topleft', legend=c("Retained", "Removed"), pt.bg=c("yellow", "red"), pch=21)
axis(1, at=seq(from=152, to=154, by=0.2))
axis(2, at=seq(from=-26, to=-25, by=0.1), las=2)
scalebar(d=10, label="10 km")
box()
dev.off()
